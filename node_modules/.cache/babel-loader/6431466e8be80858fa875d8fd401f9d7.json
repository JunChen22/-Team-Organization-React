{"ast":null,"code":"var _jsxFileName = \"/home/jun/Desktop/ManagmentSystem-react/src/components/DashBoard.js\";\nimport React, { Component } from \"react\";\nimport Schedule from \"./Schedule/Schedule\";\nimport { connect } from \"react-redux\";\nimport { getSchedules } from \"../actions/scheduleActions\";\nimport PropTypes from \"prop-types\";\nimport \"../App.css\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport CreateScheduleForm from \"./Schedule/CreateScheduleForm\";\n\nclass DashBoard extends Component {\n  componentDidMount() {\n    this.props.getSchedules();\n  }\n\n  render() {\n    const {\n      schedules\n    } = this.props.schedule;\n    const eventList = [];\n\n    for (let i = 0; i < schedules.length; i++) {\n      eventList.push({\n        title: schedules[i].title,\n        date: schedules[i].date //description: \"test desp\",\n        //startTime: schedules[i].startTime,\n        //endTime: schedules[i].endTime\n\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"schedules\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"schedules\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), schedules.map(schedule => React.createElement(Schedule, {\n      key: schedule.id,\n      schedule: schedule,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(FullCalendar, {\n      header: {\n        left: \"title\",\n        center: \"dayGridMonth,timeGridWeek\",\n        right: \"today prev,next \"\n      },\n      defaultView: \"dayGridMonth\",\n      plugins: [timeGridPlugin, dayGridPlugin],\n      height: 600,\n      events: eventList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nDashBoard.propTypes = {\n  schedule: PropTypes.object.isRequired,\n  getSchedules: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  schedule: state.schedule\n});\n\nexport default connect(mapStateToProps, {\n  getSchedules\n})(DashBoard);","map":{"version":3,"sources":["/home/jun/Desktop/ManagmentSystem-react/src/components/DashBoard.js"],"names":["React","Component","Schedule","connect","getSchedules","PropTypes","FullCalendar","dayGridPlugin","timeGridPlugin","CreateScheduleForm","DashBoard","componentDidMount","props","render","schedules","schedule","eventList","i","length","push","title","date","map","id","left","center","right","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Schedule from \"./Schedule/Schedule\";\nimport { connect } from \"react-redux\";\nimport { getSchedules } from \"../actions/scheduleActions\";\nimport PropTypes from \"prop-types\";\nimport \"../App.css\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport CreateScheduleForm from \"./Schedule/CreateScheduleForm\";\n\nclass DashBoard extends Component {\n  componentDidMount() {\n    this.props.getSchedules();\n  }\n\n  render() {\n    const { schedules } = this.props.schedule;\n\n    const eventList = [];\n    for (let i = 0; i < schedules.length; i++) {\n      eventList.push({\n        title: schedules[i].title,\n        date: schedules[i].date\n        //description: \"test desp\",\n        //startTime: schedules[i].startTime,\n        //endTime: schedules[i].endTime\n      });\n    }\n    return (\n      <div className=\"schedules\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">schedules</h1>\n              <br />\n\n              <br />\n              <hr />\n              {schedules.map(schedule => (\n                <Schedule key={schedule.id} schedule={schedule} />\n              ))}\n\n              <div className=\"container\">\n                <FullCalendar\n                  header={{\n                    left: \"title\",\n                    center: \"dayGridMonth,timeGridWeek\",\n                    right: \"today prev,next \"\n                  }}\n                  defaultView=\"dayGridMonth\"\n                  plugins={[timeGridPlugin, dayGridPlugin]}\n                  height={600}\n                  events={eventList}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashBoard.propTypes = {\n  schedule: PropTypes.object.isRequired,\n  getSchedules: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  schedule: state.schedule\n});\n\nexport default connect(\n  mapStateToProps,\n  { getSchedules }\n)(DashBoard);\n"]},"metadata":{},"sourceType":"module"}